#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å Python
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'back_su_m.settings')
django.setup()

from news.models import News, Event, Announcement


def clean_fake_data():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ñ–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã"""
    
    print("üóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    initial_news_count = News.objects.count()
    initial_events_count = Event.objects.count()
    initial_announcements_count = Announcement.objects.count()
    
    print(f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"   - –ù–æ–≤–æ—Å—Ç–∏: {initial_news_count}")
    print(f"   - –°–æ–±—ã—Ç–∏—è: {initial_events_count}")
    print(f"   - –û–±—ä—è–≤–ª–µ–Ω–∏—è: {initial_announcements_count}")
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ "lorem", "ipsum", "test", "demo", "example")
    fake_keywords = ['lorem', 'ipsum', 'test', 'demo', 'example', '—Ñ–µ–π–∫', '—Ç–µ—Å—Ç', '–¥–µ–º–æ']
    
    deleted_news = 0
    deleted_events = 0
    deleted_announcements = 0
    
    # –£–¥–∞–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
    for keyword in fake_keywords:
        news_to_delete = News.objects.filter(
            models.Q(title_ru__icontains=keyword) |
            models.Q(title_kg__icontains=keyword) |
            models.Q(title_en__icontains=keyword) |
            models.Q(content_ru__icontains=keyword) |
            models.Q(content_kg__icontains=keyword) |
            models.Q(content_en__icontains=keyword) |
            models.Q(summary_ru__icontains=keyword) |
            models.Q(summary_kg__icontains=keyword) |
            models.Q(summary_en__icontains=keyword)
        )
        count = news_to_delete.count()
        if count > 0:
            news_to_delete.delete()
            deleted_news += count
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '{keyword}'")
    
    # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
    events_to_delete = Event.objects.filter(news__isnull=True)
    count = events_to_delete.count()
    if count > 0:
        events_to_delete.delete()
        deleted_events += count
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} –æ—Å–∏—Ä–æ—Ç–µ–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π")
    
    announcements_to_delete = Announcement.objects.filter(news__isnull=True)
    count = announcements_to_delete.count()
    if count > 0:
        announcements_to_delete.delete()
        deleted_announcements += count
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} –æ—Å–∏—Ä–æ—Ç–µ–≤—à–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    final_news_count = News.objects.count()
    final_events_count = Event.objects.count()
    final_announcements_count = Announcement.objects.count()
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:")
    print(f"   - –ù–æ–≤–æ—Å—Ç–∏: {initial_news_count} ‚Üí {final_news_count} (-{deleted_news})")
    print(f"   - –°–æ–±—ã—Ç–∏—è: {initial_events_count} ‚Üí {final_events_count} (-{deleted_events})")
    print(f"   - –û–±—ä—è–≤–ª–µ–Ω–∏—è: {initial_announcements_count} ‚Üí {final_announcements_count} (-{deleted_announcements})")
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É.")
    
    return {
        'deleted_news': deleted_news,
        'deleted_events': deleted_events,
        'deleted_announcements': deleted_announcements,
        'final_counts': {
            'news': final_news_count,
            'events': final_events_count,
            'announcements': final_announcements_count
        }
    }


if __name__ == '__main__':
    try:
        from django.db import models
        results = clean_fake_data()
        
        if results['deleted_news'] == 0 and results['deleted_events'] == 0 and results['deleted_announcements'] == 0:
            print("‚ÑπÔ∏è  –§–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        else:
            print(f"üéâ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ {results['deleted_news'] + results['deleted_events'] + results['deleted_announcements']} –∑–∞–ø–∏—Å–µ–π!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()
