# Generated by Django 5.2.5 on 2025-10-01 02:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Club name in Russian', max_length=200, verbose_name='Club Name')),
                ('title_en', models.CharField(blank=True, help_text='Club name in English', max_length=200, verbose_name='Club Name (English)')),
                ('title_ky', models.CharField(blank=True, help_text='Club name in Kyrgyz', max_length=200, verbose_name='–ö–ª—É–±–¥—É–Ω –∞—Ç—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('description', models.TextField(help_text='Club description in Russian', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='Club description in English', verbose_name='Description (English)')),
                ('description_ky', models.TextField(blank=True, help_text='Club description in Kyrgyz', verbose_name='–°“Ø—Ä”©—Ç—Ç”©–º”© (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('members', models.CharField(default='0', help_text='Number of members (e.g., "50+", "25")', max_length=50, verbose_name='Members Count')),
                ('meetings', models.CharField(help_text='When the club meets', max_length=200, verbose_name='Meeting Schedule')),
                ('meetings_en', models.CharField(blank=True, max_length=200, verbose_name='Meeting Schedule (English)')),
                ('meetings_ky', models.CharField(blank=True, max_length=200, verbose_name='–ñ–æ–ª—É–≥—É—à—É—É –≥—Ä–∞—Ñ–∏–≥–∏ (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('leader', models.CharField(help_text='Name of the club leader', max_length=200, verbose_name='Club Leader')),
                ('leader_en', models.CharField(blank=True, max_length=200, verbose_name='Club Leader (English)')),
                ('leader_ky', models.CharField(blank=True, max_length=200, verbose_name='–ö–ª—É–± –∂–µ—Ç–µ–∫—á–∏—Å–∏ (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('achievements', models.JSONField(default=list, help_text='List of club achievements in Russian', verbose_name='Achievements')),
                ('achievements_en', models.JSONField(default=list, help_text='List of club achievements in English', verbose_name='Achievements (English)')),
                ('achievements_ky', models.JSONField(default=list, help_text='List of club achievements in Kyrgyz', verbose_name='–ñ–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('category', models.CharField(choices=[('clubs', 'General'), ('academic', 'Academic'), ('sports', 'Sports'), ('cultural', 'Cultural'), ('social', 'Social'), ('professional', 'Professional'), ('hobby', 'Hobby')], default='clubs', max_length=50, verbose_name='Category')),
                ('status', models.CharField(choices=[('active', 'Active'), ('recruiting', 'Recruiting'), ('paused', 'Paused'), ('inactive', 'Inactive')], default='active', max_length=20, verbose_name='Status')),
                ('image', models.CharField(default='üë•', help_text='Emoji icon for the club', max_length=10, verbose_name='Icon')),
                ('color', models.CharField(choices=[('bg-green-500', 'Green'), ('bg-blue-500', 'Blue'), ('bg-purple-500', 'Purple'), ('bg-red-500', 'Red'), ('bg-indigo-500', 'Indigo'), ('bg-pink-500', 'Pink'), ('bg-teal-500', 'Teal'), ('bg-amber-500', 'Amber')], default='bg-green-500', max_length=50, verbose_name='Color Theme')),
                ('popular', models.BooleanField(default=False, help_text='Mark as popular to show special badge', verbose_name='Popular Club')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubs',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Event title in Russian', max_length=200, verbose_name='Event Title')),
                ('title_en', models.CharField(blank=True, help_text='Event title in English', max_length=200, verbose_name='Event Title (English)')),
                ('title_ky', models.CharField(blank=True, help_text='Event title in Kyrgyz', max_length=200, verbose_name='–ò—à-—á–∞—Ä–∞–Ω—ã–Ω –∞—Ç–∞–ª—ã—à—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('description', models.TextField(help_text='Event description in Russian', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='Event description in English', verbose_name='Description (English)')),
                ('description_ky', models.TextField(blank=True, help_text='Event description in Kyrgyz', verbose_name='–°“Ø—Ä”©—Ç—Ç”©–º”© (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('date', models.DateTimeField(help_text='When the event takes place', verbose_name='Event Date')),
                ('location', models.CharField(help_text='Where the event takes place', max_length=200, verbose_name='Location')),
                ('location_en', models.CharField(blank=True, max_length=200, verbose_name='Location (English)')),
                ('location_ky', models.CharField(blank=True, max_length=200, verbose_name='–ñ–µ—Ä (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('organizer', models.CharField(help_text='Who organizes the event', max_length=200, verbose_name='Organizer')),
                ('organizer_en', models.CharField(blank=True, max_length=200, verbose_name='Organizer (English)')),
                ('organizer_ky', models.CharField(blank=True, max_length=200, verbose_name='–£—é—à—Ç—É—Ä—É—É—á—É (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('participants', models.CharField(blank=True, help_text='Expected number of participants (e.g., "150+", "50-100")', max_length=100, verbose_name='Participants Count')),
                ('category', models.CharField(choices=[('events', 'Events'), ('forum', 'Forum'), ('conference', 'Conference'), ('career', 'Career'), ('workshop', 'Workshop'), ('competition', 'Competition'), ('ceremony', 'Ceremony')], default='events', max_length=50, verbose_name='Category')),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20, verbose_name='Status')),
                ('registration', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('full', 'Full')], default='open', max_length=20, verbose_name='Registration Status')),
                ('image', models.CharField(default='üìÖ', help_text='Emoji icon for the event', max_length=10, verbose_name='Icon')),
                ('color', models.CharField(choices=[('bg-blue-500', 'Blue'), ('bg-green-500', 'Green'), ('bg-purple-500', 'Purple'), ('bg-red-500', 'Red'), ('bg-indigo-500', 'Indigo'), ('bg-pink-500', 'Pink'), ('bg-teal-500', 'Teal'), ('bg-amber-500', 'Amber')], default='bg-blue-500', max_length=50, verbose_name='Color Theme')),
                ('popular', models.BooleanField(default=False, help_text='Mark as popular to show special badge', verbose_name='Popular Event')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project title in Russian', max_length=200, verbose_name='Project Title')),
                ('title_en', models.CharField(blank=True, help_text='Project title in English', max_length=200, verbose_name='Project Title (English)')),
                ('title_ky', models.CharField(blank=True, help_text='Project title in Kyrgyz', max_length=200, verbose_name='–î–æ–ª–±–æ–æ—Ä–¥—É–Ω –∞—Ç–∞–ª—ã—à—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('description', models.TextField(help_text='Project description in Russian', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='Project description in English', verbose_name='Description (English)')),
                ('description_ky', models.TextField(blank=True, help_text='Project description in Kyrgyz', verbose_name='–°“Ø—Ä”©—Ç—Ç”©–º”© (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('team', models.CharField(default='1', help_text='Number of team members (e.g., "5", "3-7")', max_length=50, verbose_name='Team Size')),
                ('progress', models.PositiveIntegerField(default=0, help_text='Project completion percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progress Percentage')),
                ('needs', models.JSONField(default=list, help_text='List of skills/resources needed in Russian', verbose_name='Requirements')),
                ('needs_en', models.JSONField(default=list, help_text='List of skills/resources needed in English', verbose_name='Requirements (English)')),
                ('needs_ky', models.JSONField(default=list, help_text='List of skills/resources needed in Kyrgyz', verbose_name='–¢–∞–ª–∞–ø—Ç–∞—Ä (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('category', models.CharField(choices=[('projects', 'General'), ('research', 'Research'), ('innovation', 'Innovation'), ('social', 'Social'), ('technology', 'Technology'), ('medical', 'Medical'), ('environmental', 'Environmental'), ('business', 'Business')], default='projects', max_length=50, verbose_name='Category')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20, verbose_name='Status')),
                ('image', models.CharField(default='üöÄ', help_text='Emoji icon for the project', max_length=10, verbose_name='Icon')),
                ('color', models.CharField(choices=[('bg-purple-500', 'Purple'), ('bg-blue-500', 'Blue'), ('bg-green-500', 'Green'), ('bg-red-500', 'Red'), ('bg-indigo-500', 'Indigo'), ('bg-pink-500', 'Pink'), ('bg-teal-500', 'Teal'), ('bg-amber-500', 'Amber')], default='bg-purple-500', max_length=50, verbose_name='Color Theme')),
                ('popular', models.BooleanField(default=False, help_text='Mark as popular to show special badge', verbose_name='Popular Project')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
    ]
