# Generated by Django 5.2.5 on 2025-09-24 03:18

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ "–û –Ω–∞—Å"', max_length=200, verbose_name='–ó–∞–≥–æ–ª–æ–≤–æ–∫')),
                ('title_en', models.CharField(blank=True, help_text='About section title in English', max_length=200, verbose_name='Title (English)')),
                ('title_ky', models.CharField(blank=True, help_text='About section title in Kyrgyz', max_length=200, verbose_name='–ê—Ç–∞–ª—ã—à—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('subtitle', models.CharField(blank=True, help_text='–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏', max_length=300, verbose_name='–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫')),
                ('subtitle_en', models.CharField(blank=True, help_text='About section subtitle in English', max_length=300, verbose_name='Subtitle (English)')),
                ('subtitle_ky', models.CharField(blank=True, help_text='About section subtitle in Kyrgyz', max_length=300, verbose_name='–°—É–±–∞—Ç–∞–ª—ã—à—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('content', models.TextField(blank=True, help_text='–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å–µ–∫—Ü–∏–∏ "–û –Ω–∞—Å"', verbose_name='–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ')),
                ('content_en', models.TextField(blank=True, help_text='About section content in English', verbose_name='Content (English)')),
                ('content_ky', models.TextField(blank=True, help_text='About section content in Kyrgyz', verbose_name='–ú–∞–∑–º—É–Ω—É (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('is_active', models.BooleanField(default=True, help_text='–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–µ–∫—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ', verbose_name='–ê–∫—Ç–∏–≤–Ω–∞')),
                ('show_partners', models.BooleanField(default=True, help_text='–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –≤ —Å–µ–∫—Ü–∏–∏', verbose_name='–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤')),
                ('partners_animation_speed', models.FloatField(default=0.5, help_text='–°–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ (px per frame)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)], verbose_name='–°–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è')),
            ],
            options={
                'verbose_name': '–°–µ–∫—Ü–∏—è "–û –Ω–∞—Å"',
                'verbose_name_plural': '–°–µ–∫—Ü–∏–∏ "–û –Ω–∞—Å"',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ', max_length=200, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞')),
                ('name_en', models.CharField(blank=True, help_text='Partner name in English', max_length=200, verbose_name='Partner Name (English)')),
                ('name_ky', models.CharField(blank=True, help_text='Partner name in Kyrgyz', max_length=200, verbose_name='–®–µ—Ä–∏–∫—Ç–µ—à—Ç–∏–Ω –∞—Ç—ã (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('icon', models.CharField(default='ü§ù', help_text='–≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: üè•, üåê)', max_length=10, verbose_name='–ò–∫–æ–Ω–∫–∞')),
                ('logo', models.ImageField(blank=True, help_text='–õ–æ–≥–æ—Ç–∏–ø –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∫–æ–Ω–∫–∞)', null=True, upload_to='partners/logos/', verbose_name='–õ–æ–≥–æ—Ç–∏–ø')),
                ('website', models.URLField(blank=True, help_text='–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞', verbose_name='–í–µ–±-—Å–∞–π—Ç')),
                ('description', models.TextField(blank=True, help_text='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞', verbose_name='–û–ø–∏—Å–∞–Ω–∏–µ')),
                ('description_en', models.TextField(blank=True, help_text='Brief description in English', verbose_name='Description (English)')),
                ('description_ky', models.TextField(blank=True, help_text='Brief description in Kyrgyz', verbose_name='–°—ã–ø–∞—Ç—Ç–∞–º–∞ (–ö—ã—Ä–≥—ã–∑—á–∞)')),
                ('color_theme', models.CharField(choices=[('from-blue-500 to-indigo-600', 'Blue to Indigo'), ('from-purple-500 to-pink-600', 'Purple to Pink'), ('from-green-500 to-teal-600', 'Green to Teal'), ('from-amber-500 to-orange-600', 'Amber to Orange'), ('from-red-500 to-rose-600', 'Red to Rose'), ('from-indigo-500 to-blue-600', 'Indigo to Blue'), ('from-pink-500 to-rose-600', 'Pink to Rose'), ('from-teal-500 to-emerald-600', 'Teal to Emerald'), ('from-cyan-500 to-blue-600', 'Cyan to Blue'), ('from-yellow-500 to-amber-600', 'Yellow to Amber')], default='from-blue-500 to-indigo-600', help_text='–ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞', max_length=50, verbose_name='–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞')),
                ('glow_effect', models.CharField(choices=[('hover:shadow-blue-500/50', 'Blue Glow'), ('hover:shadow-purple-500/50', 'Purple Glow'), ('hover:shadow-green-500/50', 'Green Glow'), ('hover:shadow-amber-500/50', 'Amber Glow'), ('hover:shadow-red-500/50', 'Red Glow'), ('hover:shadow-indigo-500/50', 'Indigo Glow'), ('hover:shadow-pink-500/50', 'Pink Glow'), ('hover:shadow-teal-500/50', 'Teal Glow'), ('hover:shadow-cyan-500/50', 'Cyan Glow'), ('hover:shadow-yellow-500/50', 'Yellow Glow')], default='hover:shadow-blue-500/50', help_text='–≠—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏', max_length=50, verbose_name='–≠—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è')),
                ('is_active', models.BooleanField(default=True, help_text='–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ', verbose_name='–ê–∫—Ç–∏–≤–µ–Ω')),
                ('order', models.PositiveIntegerField(default=0, help_text='–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ (0 - –ø–µ—Ä–≤—ã–π)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è')),
            ],
            options={
                'verbose_name': '–ü–∞—Ä—Ç–Ω–µ—Ä',
                'verbose_name_plural': '–ü–∞—Ä—Ç–Ω–µ—Ä—ã',
                'ordering': ['order', 'name'],
            },
        ),
    ]
