# Generated by Django 5.2.5 on 2025-09-15 12:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicRegulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Учебный регламент',
                'verbose_name_plural': 'Учебные регламенты',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DownloadableDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('type', models.CharField(choices=[('charter', 'Устав'), ('regulation', 'Регламент'), ('position', 'Положение'), ('code', 'Кодекс'), ('rules', 'Правила'), ('other', 'Другое')], max_length=20, verbose_name='Тип')),
                ('file', models.FileField(upload_to='regulations/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])], verbose_name='Файл')),
                ('file_size', models.CharField(max_length=50, verbose_name='Размер файла')),
                ('format', models.CharField(max_length=10, verbose_name='Формат')),
                ('last_updated', models.DateField(verbose_name='Дата последнего обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Документ для скачивания',
                'verbose_name_plural': 'Документы для скачивания',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('duration', models.CharField(max_length=100, verbose_name='Продолжительность')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Возможность обмена',
                'verbose_name_plural': 'Возможности обмена',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='GuideStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField(verbose_name='Номер шага')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок шага')),
                ('description', models.TextField(verbose_name='Описание шага')),
                ('timeframe', models.CharField(max_length=100, verbose_name='Временные рамки')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Шаг инструкции',
                'verbose_name_plural': 'Шаги инструкций',
                'ordering': ['guide', 'order'],
            },
        ),
        migrations.CreateModel(
            name='InternalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Правило внутреннего распорядка',
                'verbose_name_plural': 'Правила внутреннего распорядка',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='InternshipRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('category', models.CharField(choices=[('academic', 'Академические требования'), ('documents', 'Документы для практики'), ('duration', 'Продолжительность практики')], max_length=20, verbose_name='Категория')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Требование к практике',
                'verbose_name_plural': 'Требования к практике',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='MobilityRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('academic', 'Академические требования'), ('language', 'Языковые требования'), ('documents', 'Документы')], max_length=20, verbose_name='Категория')),
                ('text', models.TextField(verbose_name='Требование')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Требование мобильности',
                'verbose_name_plural': 'Требования мобильности',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PartnerOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('type', models.CharField(choices=[('government', 'Государственная больница'), ('private', 'Частная клиника'), ('specialized', 'Специализированный центр')], max_length=20, verbose_name='Тип')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Контактное лицо')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Организация-партнер',
                'verbose_name_plural': 'Организации-партнеры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PartnerUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='universities/', verbose_name='Логотип')),
                ('duration', models.CharField(max_length=100, verbose_name='Продолжительность')),
                ('language', models.CharField(max_length=100, verbose_name='Язык обучения')),
                ('gpa_requirement', models.CharField(max_length=10, verbose_name='Требование к GPA')),
                ('language_cert', models.CharField(max_length=255, verbose_name='Языковой сертификат')),
                ('recommendation_required', models.BooleanField(default=True, verbose_name='Рекомендательные письма')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Контактный email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Университет-партнер',
                'verbose_name_plural': 'Университеты-партнеры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('file', models.FileField(upload_to='internship_templates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])], verbose_name='Файл')),
                ('file_size', models.CharField(max_length=50, verbose_name='Размер файла')),
                ('format', models.CharField(max_length=10, verbose_name='Формат')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Шаблон отчета',
                'verbose_name_plural': 'Шаблоны отчетов',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='StudentAppeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('student_id', models.CharField(blank=True, max_length=50, verbose_name='Студенческий билет')),
                ('appeal_type', models.CharField(choices=[('complaint', 'Жалоба'), ('suggestion', 'Предложение'), ('question', 'Вопрос'), ('other', 'Другое')], max_length=20, verbose_name='Тип обращения')),
                ('subject', models.CharField(max_length=255, verbose_name='Тема')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='appeals/', verbose_name='Приложение')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('in_progress', 'В обработке'), ('resolved', 'Решено'), ('closed', 'Закрыто')], default='new', max_length=20, verbose_name='Статус')),
                ('response', models.TextField(blank=True, verbose_name='Ответ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
            ],
            options={
                'verbose_name': 'Обращение студента',
                'verbose_name_plural': 'Обращения студентов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_slug', models.SlugField(unique=True, verbose_name='ID слаг')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('guide_type', models.CharField(choices=[('academic-leave', 'Академический отпуск'), ('restoration', 'Восстановление'), ('vacation', 'Отпуск для работающих студентов')], max_length=30, verbose_name='Тип инструкции')),
                ('description', models.TextField(verbose_name='Описание')),
                ('max_duration', models.CharField(max_length=255, verbose_name='Максимальный срок')),
                ('contact', models.CharField(max_length=500, verbose_name='Контактная информация')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Инструкция для студентов',
                'verbose_name_plural': 'Инструкции для студентов',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='AcademicRegulationSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitle', models.CharField(max_length=255, verbose_name='Подзаголовок')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('regulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='student_life.academicregulation')),
            ],
            options={
                'verbose_name': 'Раздел регламента',
                'verbose_name_plural': 'Разделы регламентов',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='AcademicRegulationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Правило')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='student_life.academicregulationsection')),
            ],
            options={
                'verbose_name': 'Правило регламента',
                'verbose_name_plural': 'Правила регламентов',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Преимущество')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='student_life.exchangeopportunity')),
            ],
            options={
                'verbose_name': 'Преимущество обмена',
                'verbose_name_plural': 'Преимущества обмена',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='GuideStepDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Детали')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='student_life.guidestep')),
            ],
            options={
                'verbose_name': 'Деталь шага',
                'verbose_name_plural': 'Детали шагов',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='InternalRuleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='student_life.internalrule')),
            ],
            options={
                'verbose_name': 'Элемент правила',
                'verbose_name_plural': 'Элементы правил',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='InternshipRequirementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='student_life.internshiprequirement')),
            ],
            options={
                'verbose_name': 'Элемент требования',
                'verbose_name_plural': 'Элементы требований',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название специализации')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='student_life.partnerorganization')),
            ],
            options={
                'verbose_name': 'Специализация',
                'verbose_name_plural': 'Специализации',
            },
        ),
        migrations.AddField(
            model_name='guidestep',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='student_life.studentguide'),
        ),
        migrations.CreateModel(
            name='GuideRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Требование')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='student_life.studentguide')),
            ],
            options={
                'verbose_name': 'Требование инструкции',
                'verbose_name_plural': 'Требования инструкций',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UniversityProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название программы')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='student_life.partneruniversity')),
            ],
            options={
                'verbose_name': 'Программа университета',
                'verbose_name_plural': 'Программы университетов',
            },
        ),
        migrations.AlterUniqueTogether(
            name='guidestep',
            unique_together={('guide', 'step_number')},
        ),
    ]
