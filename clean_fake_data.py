#!/usr/bin/env python
import os
import sys
import django

# Setup Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'back_su_m.settings')
django.setup()

from news.models import Event, Announcement

def clean_stock_images():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç–æ–∫–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–æ–∫–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    stock_patterns = [
        'unsplash.com',
        'picsum.photos',
        'placeholder',
        'example.com',
        'stock-photo',
        'shutterstock',
        'getty',
        'pexels.com'
    ]
    
    print("üîç –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–∫–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –û—á–∏—Å—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π (Events)
    events_cleaned = 0
    for event in Event.objects.all():
        if event.image and any(pattern in str(event.image) for pattern in stock_patterns):
            print(f"  ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–∫–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Å–æ–±—ã—Ç–∏—è: {event.title}")
            event.image = None
            event.save()
            events_cleaned += 1
    
    # –û—á–∏—Å—Ç–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π (Announcements)  
    announcements_cleaned = 0
    for announcement in Announcement.objects.all():
        if announcement.image and any(pattern in str(announcement.image) for pattern in stock_patterns):
            print(f"  ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–∫–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {announcement.title}")
            announcement.image = None
            announcement.save()
            announcements_cleaned += 1
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
    print(f"  - –°–æ–±—ã—Ç–∏—è: {events_cleaned} —Å—Ç–æ–∫–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–¥–∞–ª–µ–Ω–æ")
    print(f"  - –û–±—ä—è–≤–ª–µ–Ω–∏—è: {announcements_cleaned} —Å—Ç–æ–∫–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–¥–∞–ª–µ–Ω–æ")

def clean_fake_data():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("\nüîç –ü–æ–∏—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...")
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    fake_patterns = [
        'Lorem ipsum',
        'Sed ut perspiciatis',
        'At vero eos',
        'But I must explain',
        'On the other hand',
        'Temporibus autem',
        'Et harum quidem',
        'Nam libero tempore'
    ]
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–µ–π–∫–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
    events_deleted = 0
    for event in Event.objects.all():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–≤—è–∑–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
        if event.news and any(pattern in str(event.news.content_ru or '') for pattern in fake_patterns):
            print(f"  üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–µ–π–∫–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: {event.news.title_ru}")
            event.delete()
            events_deleted += 1
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–µ–π–∫–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    announcements_deleted = 0
    for announcement in Announcement.objects.all():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–≤—è–∑–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
        if announcement.news and any(pattern in str(announcement.news.content_ru or '') for pattern in fake_patterns):
            print(f"  üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–µ–π–∫–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {announcement.news.title_ru}")
            announcement.delete()
            announcements_deleted += 1
    
    print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
    print(f"  - –°–æ–±—ã—Ç–∏—è: {events_deleted} –∑–∞–ø–∏—Å–µ–π —É–¥–∞–ª–µ–Ω–æ")
    print(f"  - –û–±—ä—è–≤–ª–µ–Ω–∏—è: {announcements_deleted} –∑–∞–ø–∏—Å–µ–π —É–¥–∞–ª–µ–Ω–æ")

def show_remaining_data():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ"""
    
    print("\nüìä –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ:")
    
    events = Event.objects.all()
    print(f"\nüìÖ –°–æ–±—ã—Ç–∏—è ({events.count()}):")
    for event in events:
        image_status = "‚úÖ –ï—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" if event.news and event.news.image else "‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        title = event.news.title_ru if event.news else "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
        print(f"  - {title} | {image_status}")
    
    announcements = Announcement.objects.all()
    print(f"\nüì¢ –û–±—ä—è–≤–ª–µ–Ω–∏—è ({announcements.count()}):")
    for announcement in announcements:
        image_status = "‚úÖ –ï—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" if announcement.news and announcement.news.image else "‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        title = announcement.news.title_ru if announcement.news else "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
        print(f"  - {title} | {image_status}")

if __name__ == '__main__':
    print("üöÄ –ù–∞—á–∞–ª–æ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–æ–∫–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    clean_stock_images()
    
    # –û—á–∏—â–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    clean_fake_data()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
    show_remaining_data()
    
    print("\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É.")
