#!/usr/bin/env python
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/adminbaike/medicine/SU_back_back')

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'back_su_m.settings')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Django
django.setup()

from student_life.models import PartnerOrganization, StudentAppeal

def create_test_data():
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å—é...")
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    PartnerOrganization.objects.all().delete()
    StudentAppeal.objects.all().delete()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
    organizations = [
        {
            'name_ru': '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–æ–ª—å–Ω–∏—Ü–∞',
            'name_kg': '–£–ª—É—Ç—Ç—É–∫ –æ–æ—Ä—É–∫–∞–Ω–∞',
            'name_en': 'National Hospital',
            'description_ru': '–í–µ–¥—É—â–∞—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ –≥–æ—Ä–æ–¥–∞',
            'description_kg': '–®–∞–∞—Ä–¥—ã–Ω –±–∞—à–∫—ã –º–∞–º–ª–µ–∫–µ—Ç—Ç–∏–∫ –∫–ª–∏–Ω–∏–∫–∞—Å—ã',
            'description_en': 'Leading state clinic of the city',
            'type': 'government',
            'location': '–ë–∏—à–∫–µ–∫, —É–ª. –¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ, 3',
            'contact_person': '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
            'phone': '+996 312 123456',
            'email': 'info@nathospital.kg',
            'website': 'https://nathospital.kg',
        },
        {
            'name_ru': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä "–ó–¥–æ—Ä–æ–≤—å–µ"',
            'name_kg': '"–î–µ–Ω —Å–æ–æ–ª—É–∫" –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –±–æ—Ä–±–æ—Ä—É',
            'name_en': 'Health Medical Center',
            'description_ru': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —á–∞—Å—Ç–Ω–∞—è –∫–ª–∏–Ω–∏–∫–∞ —Å –Ω–æ–≤–µ–π—à–∏–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º',
            'description_kg': '–ó–∞–º–∞–Ω–±–∞–ø –∂–∞“£—ã –∂–∞–±–¥—ã–∫—Ç–∞—Ä –º–µ–Ω–µ–Ω –∂–µ–∫–µ –∫–ª–∏–Ω–∏–∫–∞',
            'description_en': 'Modern private clinic with latest equipment',
            'type': 'private',
            'location': '–ë–∏—à–∫–µ–∫, –ø—Ä. –ß—É–π, 123',
            'contact_person': '–ü–µ—Ç—Ä–æ–≤–∞ –ê.–°.',
            'phone': '+996 312 789012',
            'email': 'info@healthcenter.kg',
            'website': 'https://healthcenter.kg',
        },
        {
            'name_ru': '–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –∏–º. –ê–∫—É–Ω–±–∞–µ–≤–∞',
            'name_kg': '–ê–∫—É–Ω–±–∞–µ–≤ –∞—Ç—ã–Ω–¥–∞–≥—ã –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è–ª—ã–∫ –±–æ—Ä–±–æ—Ä',
            'name_en': 'Akunbaev Cardiology Center',
            'description_ru': '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏–∏ –∏ –∫–∞—Ä–¥–∏–æ—Ö–∏—Ä—É—Ä–≥–∏–∏',
            'description_kg': '–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è –∂–∞–Ω–∞ –∫–∞—Ä–¥–∏–æ—Ö–∏—Ä—É—Ä–≥–∏—è–Ω—ã–Ω –∞–¥–∏—Å—Ç–µ—à—Ç–∏—Ä–∏–ª–≥–µ–Ω –±–æ—Ä–±–æ—Ä—É',
            'description_en': 'Specialized center for cardiology and cardiac surgery',
            'type': 'specialized',
            'location': '–ë–∏—à–∫–µ–∫, —É–ª. –ê—Ö—É–Ω–±–∞–µ–≤–∞, 92',
            'contact_person': '–°—ã–¥—ã–∫–æ–≤ –ö.–ú.',
            'phone': '+996 312 345678',
            'email': 'info@cardio.kg',
            'website': 'https://cardio.kg',
        }
    ]
    
    for org_data in organizations:
        org = PartnerOrganization.objects.create(**org_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {org.name_ru}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è
    appeal = StudentAppeal.objects.create(
        full_name='–¢–µ—Å—Ç–æ–≤—ã–π –°—Ç—É–¥–µ–Ω—Ç',
        email='student@test.kg',
        phone='+996 700 123456',
        student_id='ST2024001',
        category='academic',
        subject='–¢–µ—Å—Ç–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º',
        message='–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—â–µ–Ω–∏–π.',
        status='new'
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ: {appeal.subject}")
    
    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print(f"üìä –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {PartnerOrganization.objects.count()}")
    print(f"üìä –û–±—Ä–∞—â–µ–Ω–∏–π: {StudentAppeal.objects.count()}")

if __name__ == '__main__':
    create_test_data()
